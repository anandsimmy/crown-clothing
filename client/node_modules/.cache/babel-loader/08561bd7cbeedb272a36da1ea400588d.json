{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectShopCollectionsOverView = createSelector([selectShopCollections], collections => Object.keys(collections).map(key => collections[key]));\nexport const selectCollectionCatgeory = collectionUrlParam => createSelector([selectShopCollections], collections => collections[collectionUrlParam]);\nexport const selectIsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsComponentDataLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/client/src/redux/shop/shop-selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectShopCollectionsOverView","Object","keys","map","key","selectCollectionCatgeory","collectionUrlParam","selectIsFetching","isFetching","selectIsComponentDataLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAEC,KAAK,IAAIA,KAAK,CAACC,IAAjC;;AAEA,OAAO,MAAMC,qBAAqB,GAAEJ,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE9CE,IAAI,IAAIA,IAAI,CAACE,WAFiC,CAA3C;AAKP,OAAO,MAAMC,6BAA6B,GAAEN,cAAc,CACtD,CAACI,qBAAD,CADsD,EAEtDC,WAAW,IAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAFuC,CAAnD;AAKP,OAAO,MAAMC,wBAAwB,GAAGC,kBAAD,IACnCZ,cAAc,CACV,CAACI,qBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,CAACO,kBAAD,CAFhB,CADX;AAOP,OAAO,MAAMC,gBAAgB,GAAEb,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACW,UAF4B,CAAtC;AAKP,OAAO,MAAMC,2BAA2B,GAAEf,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFqC,CAAjD","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectShop= state => state.shop\n\nexport const selectShopCollections= createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectShopCollectionsOverView= createSelector(\n    [selectShopCollections],\n    collections => Object.keys(collections).map(key => collections[key])\n)\n\nexport const selectCollectionCatgeory= (collectionUrlParam) => (\n    createSelector(\n        [selectShopCollections],\n        collections => collections[collectionUrlParam]\n    )\n)\n\nexport const selectIsFetching= createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsComponentDataLoaded= createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}