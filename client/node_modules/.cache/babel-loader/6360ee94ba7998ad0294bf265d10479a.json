{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileInDB } from '../../firebase/firebase-utils';\nimport userActionTypes from './user-action-types';\nimport { signInSuccess, signInFailure } from './user-actions';\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield createUserProfileInDB(user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield createUserProfileInDB(user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    console.log(error);\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* emailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","auth","googleProvider","createUserProfileInDB","userActionTypes","signInSuccess","signInFailure","emailSignIn","payload","email","password","user","signInWithEmailAndPassword","userRef","userSnapshot","get","emailSignInSuccess","id","data","error","emailSignInFailure","googleSignIn","signInWithPopup","googleSignInSuccess","console","log","googleSignInFailure","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,qBAA/B,QAA4D,+BAA5D;AAEA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,WAAV,CAAsB;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAAtB,EAAmD;AACtD,MAAG;AACC,UAAM;AAAEC,MAAAA;AAAF,QAAU,MAAMV,IAAI,CAACW,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAtB;AACA,UAAMG,OAAO,GAAE,MAAMV,qBAAqB,CAACQ,IAAD,CAA1C;AACA,UAAMG,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMjB,GAAG,CAACkB,kBAAkB,CAAC;AACzBC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADQ;AAEzB,SAAGH,YAAY,CAACI,IAAb;AAFsB,KAAD,CAAnB,CAAT;AAIH,GARD,CAQC,OAAMC,KAAN,EAAY;AACT,UAAMrB,GAAG,CAACsB,kBAAkB,CAACD,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,YAAV,GAAwB;AAC3B,MAAG;AACH,UAAM;AAAEV,MAAAA;AAAF,QAAU,MAAMV,IAAI,CAACqB,eAAL,CAAqBpB,cAArB,CAAtB;AACA,UAAMW,OAAO,GAAE,MAAMV,qBAAqB,CAACQ,IAAD,CAA1C;AACA,UAAMG,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMjB,GAAG,CAACyB,mBAAmB,CAAC;AAC1BN,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADS;AAE1B,SAAGH,YAAY,CAACI,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIC,GARD,CASA,OAAMC,KAAN,EAAY;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,UAAMrB,GAAG,CAAC4B,mBAAmB,CAACP,KAAD,CAApB,CAAT;AACC;AACJ;AAED,OAAO,UAAUQ,iBAAV,GAA6B;AAChC,QAAM9B,UAAU,CAACO,eAAe,CAACwB,oBAAjB,EAAuCP,YAAvC,CAAhB;AACH;AAED,OAAO,UAAUQ,gBAAV,GAA4B;AAC/B,QAAMhC,UAAU,CAACO,eAAe,CAAC0B,mBAAjB,EAAsCvB,WAAtC,CAAhB;AACH;AAED,OAAO,UAAUwB,SAAV,GAAqB;AACxB,QAAM/B,GAAG,CAAC,CAACD,IAAI,CAAC4B,iBAAD,CAAL,EAA0B5B,IAAI,CAAC8B,gBAAD,CAA9B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileInDB } from '../../firebase/firebase-utils'\n\nimport userActionTypes from './user-action-types'\nimport { signInSuccess, signInFailure } from './user-actions'\n\nexport function* emailSignIn({payload: {email, password}}){\n    try{\n        const { user }= yield auth.signInWithEmailAndPassword(email, password)\n        const userRef= yield createUserProfileInDB(user)\n        const userSnapshot= yield userRef.get()\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    }catch(error){\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* googleSignIn(){\n    try{\n    const { user }= yield auth.signInWithPopup(googleProvider)\n    const userRef= yield createUserProfileInDB(user)\n    const userSnapshot= yield userRef.get()\n    yield put(googleSignInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n    }))\n    }\n    catch(error){\n    console.log(error)\n    yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* googleSignInStart(){\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, googleSignIn)\n}\n\nexport function* emailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, emailSignIn)\n}\n\nexport function* userSagas(){\n    yield all([call(googleSignInStart), call(emailSignInStart)])\n}\n\n"]},"metadata":{},"sourceType":"module"}