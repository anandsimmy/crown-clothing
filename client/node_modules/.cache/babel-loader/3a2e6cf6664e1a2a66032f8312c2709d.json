{"ast":null,"code":"var _jsxFileName = \"/Users/anandsimmy/react-projects/crown-clothing/src/components/sign-in/sign-in-component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in-styles.scss';\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button-component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCreds, setUserCreds] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCreds;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCreds({ ...userCreds,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"I already have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sign in with your Email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/components/sign-in/sign-in-component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCreds","setUserCreds","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport './sign-in-styles.scss'\n\nimport FormInput from '../form-input/form-input-component'\nimport CustomButton from '../custom-button/custom-button-component'   \nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions'\n\nconst SignIn=({ emailSignInStart, googleSignInStart }) => {\n\n    const [userCreds, setUserCreds]= useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password }= userCreds\n\n    const handleSubmit=async event => {\n        event.preventDefault()\n        emailSignInStart(email, password)\n    }\n\n    const handleChange=(event) => {\n        const { name, value }= event.target\n        setUserCreds({\n            ...userCreds,\n            [name]: value\n        })\n    }\n\n        return (\n            <div className='sign-in'>\n                <h2 className='title'>I already have an Account</h2>\n                <span>Sign in with your Email and password</span>\n                <form onSubmit={handleSubmit}>\n                    <FormInput \n                        type='email' \n                        name='email'\n                        value={email}\n                        handleChange={handleChange}\n                        label='Email'\n                        required />\n                    <FormInput \n                        type='password'\n                        name='password' \n                        value={password}\n                        handleChange={handleChange} \n                        label='Password' \n                        required/>\n                    <div className='buttons'>\n                        <CustomButton type='submit'>Sign In</CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                            Sign In With Google\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n}\n\nconst mapDispatchToProps= dispatch => ({\n    googleSignInStart: ()=> dispatch(googleSignInStart()),\n    emailSignInStart: (email, password)=> dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}