{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/client/src/redux/cart/cart-selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","accumulatedPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAEC,KAAK,IAAIA,KAAK,CAACC,IAAjC;;AAEA,OAAO,MAAMC,eAAe,GAAEJ,cAAc,CACxC,CAACC,UAAD,CADwC,EAEvCE,IAAD,IAAUA,IAAI,CAACE,SAFyB,CAArC;AAKP,OAAO,MAAMC,gBAAgB,GAAEN,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACI,MAF0B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAER,cAAc,CAC7C,CAACI,eAAD,CAD6C,EAE5CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAEC,QAAQ,CAACC,QAAlF,EAA4F,CAA5F,CAF8B,CAA1C;AAKP,OAAO,MAAMC,eAAe,GAAEb,cAAc,CACxC,CAACI,eAAD,CADwC,EAEvCC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACK,gBAAD,EAAmBH,QAAnB,KAC5BG,gBAAgB,GAAIH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KADtC,EAEZ,CAFY,CAFyB,CAArC","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectCart= state => state.cart\n\nexport const selectCartItems= createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n\nexport const selectCartHidden= createSelector(\n    [selectCart],\n    (cart) => cart.hidden\n)\n\nexport const selectCartItemsCount= createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity+ cartItem.quantity, 0)\n)\n\nexport const selectCartTotal= createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((accumulatedPrice, cartItem)=>(\n        accumulatedPrice + (cartItem.quantity * cartItem.price)\n    ), 0) \n)"]},"metadata":{},"sourceType":"module"}