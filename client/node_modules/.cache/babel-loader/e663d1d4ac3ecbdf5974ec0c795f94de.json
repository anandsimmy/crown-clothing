{"ast":null,"code":"var _jsxFileName = \"/Users/anandsimmy/react-projects/crown-clothing/src/components/sign-up/sign-up-component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up-styles.scss';\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button-component';\nimport { signUpStart } from '../../redux/user/user-actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCreds, setUserCreds] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    const {\n      signUpStart\n    } = this.props;\n\n    if (password !== confirmPassword) {\n      alert('passwords donot match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); //dispatching signup action\n\n    this.setState({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCreds({ ...userCreds,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"I do not have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Sign up with your Email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userObj => dispatch(signUpStart(userObj))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/components/sign-up/sign-up-component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCreds","setUserCreds","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","state","props","alert","setState","handleChange","name","value","target","mapDispatchToProps","dispatch","userObj"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport './sign-up-styles.scss'\n\nimport FormInput from '../form-input/form-input-component'\nimport CustomButton from '../custom-button/custom-button-component'\n\nimport { signUpStart } from '../../redux/user/user-actions'\n\nconst SignUp=({ signUpStart }) => {\n\n    const [userCreds, setUserCreds]= useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const handleSubmit=async event => {\n        event.preventDefault()\n\n        const { displayName, email, password, confirmPassword }= this.state\n        const { signUpStart }= this.props\n\n        if(password !== confirmPassword){\n            alert('passwords donot match')\n            return;\n        }\n        signUpStart({ displayName, email, password }) //dispatching signup action\n\n        this.setState({\n                    displayName: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: ''\n                })\n    }\n\n    const handleChange=(event) => {\n        const { name, value }= event.target\n        setUserCreds({\n            ...userCreds,\n            [name]: value\n        })\n    }\n\n\n    return(\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an Account</h2>\n            <span>Sign up with your Email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps= dispatch => ({\n    signUpStart: userObj => dispatch(signUpStart(userObj))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}