{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileInDB } from '../../firebase/firebase-utils';\nimport userActionTypes from './user-action-types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions';\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    debugger;\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield createUserProfileInDB(user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield createUserProfileInDB(user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    console.log(error);\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* emailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart)], call(emailSignInStart));\n}","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","auth","googleProvider","createUserProfileInDB","userActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","emailSignIn","payload","email","password","user","signInWithEmailAndPassword","userRef","userSnapshot","get","id","data","error","googleSignIn","signInWithPopup","console","log","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,qBAA/B,QAA4D,+BAA5D;AAEA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,OAAO,UAAUC,WAAV,CAAsB;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAAtB,EAAmD;AACtD,MAAG;AACC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAU,MAAMZ,IAAI,CAACa,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAtB;AACA,UAAMG,OAAO,GAAE,MAAMZ,qBAAqB,CAACU,IAAD,CAA1C;AACA,UAAMG,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMnB,GAAG,CAACS,kBAAkB,CAAC;AACzBW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADQ;AAEzB,SAAGF,YAAY,CAACG,IAAb;AAFsB,KAAD,CAAnB,CAAT;AAIH,GATD,CASC,OAAMC,KAAN,EAAY;AACT,UAAMtB,GAAG,CAACU,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,YAAV,GAAwB;AAC3B,MAAG;AACH,UAAM;AAAER,MAAAA;AAAF,QAAU,MAAMZ,IAAI,CAACqB,eAAL,CAAqBpB,cAArB,CAAtB;AACA,UAAMa,OAAO,GAAE,MAAMZ,qBAAqB,CAACU,IAAD,CAA1C;AACA,UAAMG,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMnB,GAAG,CAACO,mBAAmB,CAAC;AAC1Ba,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF,YAAY,CAACG,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIC,GARD,CASA,OAAMC,KAAN,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,UAAMtB,GAAG,CAACQ,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACC;AACJ;AAED,OAAO,UAAUK,iBAAV,GAA6B;AAChC,QAAM5B,UAAU,CAACO,eAAe,CAACsB,oBAAjB,EAAuCL,YAAvC,CAAhB;AACH;AAED,OAAO,UAAUM,gBAAV,GAA4B;AAC/B,QAAM9B,UAAU,CAACO,eAAe,CAACwB,mBAAjB,EAAsCnB,WAAtC,CAAhB;AACH;AAED,OAAO,UAAUoB,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACD,IAAI,CAAC0B,iBAAD,CAAL,CAAD,EAA4B1B,IAAI,CAAC4B,gBAAD,CAAhC,CAAT;AACH","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileInDB } from '../../firebase/firebase-utils'\n\nimport userActionTypes from './user-action-types'\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions'\n\nexport function* emailSignIn({payload: {email, password}}){\n    try{\n        debugger\n        const { user }= yield auth.signInWithEmailAndPassword(email, password)\n        const userRef= yield createUserProfileInDB(user)\n        const userSnapshot= yield userRef.get()\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    }catch(error){\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* googleSignIn(){\n    try{\n    const { user }= yield auth.signInWithPopup(googleProvider)\n    const userRef= yield createUserProfileInDB(user)\n    const userSnapshot= yield userRef.get()\n    yield put(googleSignInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n    }))\n    }\n    catch(error){\n    console.log(error)\n    yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* googleSignInStart(){\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, googleSignIn)\n}\n\nexport function* emailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, emailSignIn)\n}\n\nexport function* userSagas(){\n    yield all([call(googleSignInStart)], call(emailSignInStart))\n}\n\n"]},"metadata":{},"sourceType":"module"}