{"ast":null,"code":"import shopActionTypes from './shop-action-types';\nimport { firestore, transformCollectionArray } from '../../firebase/firebase-utils';\n\nconst fetchCollectionDataStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTION_DATA_START\n});\n\nconst fetchCollectionDataSuccess = collectionData => ({\n  type: shopActionTypes.FETCH_COLLECTION_DATA_SUCCESS,\n  payload: collectionData\n});\n\nconst fetchCollectionDataFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTION_DATA_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionDataAsyncOperation = () => {\n  return dispatch => {\n    dispatch(fetchCollectionDataStart());\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapShotObj => {\n      const collectionData = transformCollectionArray(snapShotObj);\n      dispatch(fetchCollectionDataSuccess(collectionData));\n    }).catch(error => {\n      dispatch(fetchCollectionDataFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/redux/shop/shop-actions.js"],"names":["shopActionTypes","firestore","transformCollectionArray","fetchCollectionDataStart","type","FETCH_COLLECTION_DATA_START","fetchCollectionDataSuccess","collectionData","FETCH_COLLECTION_DATA_SUCCESS","payload","fetchCollectionDataFailure","errorMessage","FETCH_COLLECTION_DATA_FAILURE","fetchCollectionDataAsyncOperation","dispatch","collectionRef","collection","get","then","snapShotObj","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,qBAA5B;AACA,SAASC,SAAT,EAAoBC,wBAApB,QAAoD,+BAApD;;AAEA,MAAMC,wBAAwB,GAAE,OAAO;AACnCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADa,CAAP,CAAhC;;AAIA,MAAMC,0BAA0B,GAAGC,cAAD,KAAqB;AACnDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,6BAD6B;AAEnDC,EAAAA,OAAO,EAAEF;AAF0C,CAArB,CAAlC;;AAKA,MAAMG,0BAA0B,GAAGC,YAAD,KAAmB;AACjDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,6BAD2B;AAEjDH,EAAAA,OAAO,EAAEE;AAFwC,CAAnB,CAAlC;;AAKA,OAAO,MAAME,iCAAiC,GAAE,MAAM;AAClD,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACX,wBAAwB,EAAzB,CAAR;AACA,UAAMY,aAAa,GAAEd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAArB;AACAD,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,WAAW,IAAI;AACjB,YAAMZ,cAAc,GAAEL,wBAAwB,CAACiB,WAAD,CAA9C;AACAL,MAAAA,QAAQ,CAACR,0BAA0B,CAACC,cAAD,CAA3B,CAAR;AACH,KAJD,EAKCa,KALD,CAKOC,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACJ,0BAA0B,CAACW,KAAK,CAACC,OAAP,CAA3B,CAAR;AACH,KAPD;AAQH,GAXD;AAYH,CAbM","sourcesContent":["import shopActionTypes from './shop-action-types'\nimport { firestore, transformCollectionArray } from '../../firebase/firebase-utils'\n\nconst fetchCollectionDataStart= () => ({\n    type: shopActionTypes.FETCH_COLLECTION_DATA_START\n})\n\nconst fetchCollectionDataSuccess =(collectionData) => ({\n    type: shopActionTypes.FETCH_COLLECTION_DATA_SUCCESS,\n    payload: collectionData\n})\n\nconst fetchCollectionDataFailure= (errorMessage) => ({\n    type: shopActionTypes.FETCH_COLLECTION_DATA_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionDataAsyncOperation =() => {\n    return (dispatch) => {\n        dispatch(fetchCollectionDataStart())\n        const collectionRef= firestore.collection('collections')\n        collectionRef.get()\n        .then(snapShotObj => {\n            const collectionData= transformCollectionArray(snapShotObj)\n            dispatch(fetchCollectionDataSuccess(collectionData))\n        })\n        .catch(error => {\n            dispatch(fetchCollectionDataFailure(error.message))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}