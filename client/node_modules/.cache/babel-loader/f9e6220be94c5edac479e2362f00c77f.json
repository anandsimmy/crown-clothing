{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport firebaseConfig from './firebase-config';\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileInDB = async (userAuthObj, additionalData) => {\n  if (!userAuthObj) return;\n  const userDocRef = firestore.doc(`users/${userAuthObj.uid}`);\n  const snapShot = await userDocRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuthObj;\n    const createdAt = new Date();\n\n    try {\n      userDocRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/anandsimmy/react-projects/crown-clothing/src/firebase/firebase-utils.js"],"names":["firebase","firebaseConfig","initializeApp","createUserProfileInDB","userAuthObj","additionalData","userDocRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithRedirect"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,MAAME,qBAAqB,GAAC,OAAOC,WAAP,EAAoBC,cAApB,KAAuC;AAEtE,MAAG,CAACD,WAAJ,EACI;AACJ,QAAME,UAAU,GAAEC,SAAS,CAACC,GAAV,CAAe,SAAQJ,WAAW,CAACK,GAAI,EAAvC,CAAlB;AACA,QAAMC,QAAQ,GAAE,MAAMJ,UAAU,CAACK,GAAX,EAAtB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBV,WAA9B;AACA,UAAMW,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AACA,QAAG;AACCV,MAAAA,UAAU,CAACW,GAAX,CAAe;AACXJ,QAAAA,WADW;AAEXC,QAAAA,KAFW;AAGXC,QAAAA,SAHW;AAIX,WAAGV;AAJQ,OAAf;AAMH,KAPD,CAQA,OAAOa,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AACD,SAAOf,UAAP;AACH,CAtBM;AAwBP,OAAO,MAAMgB,IAAI,GAAEtB,QAAQ,CAACsB,IAAT,EAAZ;AACP,OAAO,MAAMf,SAAS,GAAEP,QAAQ,CAACO,SAAT,EAAjB;AAEP,MAAMgB,QAAQ,GAAE,IAAIvB,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAhB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAE,MAAML,IAAI,CAACM,kBAAL,CAAwBL,QAAxB,CAA9B;AAEP,eAAevB,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nimport firebaseConfig from './firebase-config'\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const createUserProfileInDB=async (userAuthObj, additionalData) => {\n    \n    if(!userAuthObj)\n        return;\n    const userDocRef= firestore.doc(`users/${userAuthObj.uid}`)\n    const snapShot= await userDocRef.get()\n    if(!snapShot.exists){\n        const { displayName, email }= userAuthObj\n        const createdAt= new Date()\n        try{\n            userDocRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        }\n        catch (error) {\n            console.log('error creating user', error.message)\n        }\n    }\n    return userDocRef\n}\n\nexport const auth= firebase.auth()\nexport const firestore= firebase.firestore()\n\nconst provider= new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({ prompt: 'select_account' })\nexport const signInWithGoogle= () => auth.signInWithRedirect(provider)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}